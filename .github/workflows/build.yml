# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.19' ]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
        cache: false

    - name: Check code format
      run: test -z "$(gofmt -l ./)"

    - name: Check code lint
      run: make code-lint

    - name: Golang CI - Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --verbose
        skip-cache: true
        skip-pkg-cache: true
        skip-build-cache: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.17','1.18', '1.19' ]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Unit test
      run: make test

    - name: Coveralls
      uses: coverallsapp/github-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: cover.out
        parallel: true

  test_coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
